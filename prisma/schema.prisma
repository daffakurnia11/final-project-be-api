// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sensor {
  id             String    @id @default(uuid()) @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime  @updatedAt @db.Timestamptz(6)
  deleted_at     DateTime? @db.Timestamptz(6) // Nullable
  name           String    @db.Text
  voltage        Float
  current        Float
  power          Float
  power_factor   Float
  frequency      Float
  energy         Float
  apparent_power Float
  reactive_power Float

  @@map("sensor_electrics")
}

model Energy {
  id                String            @id @default(uuid()) @db.Uuid
  created_at        DateTime          @default(now()) @db.Timestamptz(6)
  updated_at        DateTime          @updatedAt @db.Timestamptz(6)
  deleted_at        DateTime?         @db.Timestamptz(6)
  name              String            @db.Text
  date              String            @db.Text
  calculated_energy Float?
  predicted_energy  Float?
  predicted_power   PowerPrediction[]

  @@index([name])
  @@index([date])
  @@map("energies")
}

model PowerPrediction {
  id          String    @id @default(uuid()) @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @updatedAt @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  energy      Energy    @relation(fields: [energy_id], references: [id], onDelete: Cascade)
  energy_id   String    @db.Uuid
  power       Float

  @@index([energy_id])
  @@map("power_predictions")
}
